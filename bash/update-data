#!/bin/bash

DEBUG=OFF

# Color for output

red=`tput setaf 1`
green=`tput setaf 2`
blue=`tput setaf 4`
reset=`tput sgr0`

RUN=0
PULL=0
UPDATE=0

POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -a|--all)
      PULL=1
      UPDATE=1
      RUN=1
      shift # past argument
      ;;
    -p|--pull)
      PULL=1
      shift # past argument
      ;;
    -r|--run)
      RUN=1
      shift # past argument
      ;;
    -u|--update)
      UPDATE=1
      shift # past argument
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done

# Folders and files

SPATH=$(dirname "$0")
if [ "$SPATH" = "." ] 
then
  GIT=$(dirname "$PWD")
else
  GIT=$(dirname "$SPATH")
fi
echo G=$GIT 

SEDDIR="bash/sed"
echo SEDDIR=$SEDDIR
AWKDIR="bash/awk"
echo AWKDIR=$AWKDIR

AKTUELL="Infektionen/Aktuell_Deutschland_SarsCov2_Infektionen.csv"
IMPFUNGEN="Impfungen/Aktuell_Deutschland_Landkreise_COVID-19-Impfungen.csv"

[ "$DEBUG" = "ON" ] && TEMP="/tmp/rki" || TEMP="/tmp/rki-$(date '+%F')"
[ ! -d  "${TEMP}" ] && mkdir "${TEMP}"

SQL="$TEMP/fallzahlen.sql"

# List of download URL

echo -e "\n\n${blue}+---------"
echo -e "| ${red}Tempoary file in: $TEMP"
echo -e "${blue}+---------${reset}\n\n"

function git_pull {

    echo -e "\n\n${blue}+---------"
    echo -e "| ${red}Holen der aktuellen Daten des RKI von github.com"
    echo -e "${blue}+---------${reset}\n\n"

    for D in Infektionen Impfungen Nowcasting Sequenzdaten Hospital
    do
        echo -e "\n\n${blue}+---------"
        echo -e "| ${red}$D "
        echo -e "${blue}+---------${reset}\n\n"
        pushd $D 2>/dev/null
            git pull 2>/dev/null
        popd 2>/dev/null
    done
}

function update_db {

# Importieren der Zahlen aus der Tabelle fÃ¼r das RKI Dashboard

    echo -e "\n\n${blue}+---------"
    echo -e "| ${red}Importieren der Daten aus dem GIT in die Datenbank"
    echo -e "${blue}+---------${reset}\n\n" 

awk -f "${AWKDIR}/fallzahlen.awk" -F ';' "${AKTUELL}" > "${TEMP}/Aktuell.csv"
sed -f "${SEDDIR}/impfungen.sed" "${IMPFUNGEN}" | awk -f "${AWKDIR}/impfungen.awk" -F ';' > "${TEMP}/Impfungen.csv"

( cat <<EOF
USE RKI;

DROP TABLE IF EXISTS Faelle;

CREATE TABLE IF NOT EXISTS Faelle (
      ObjectId INT
    , IdLandkreis INT
    , Altersgruppe CHAR(7)
    , Geschlecht CHAR(1)
    , Meldedatum DATE
    , Refdatum DATE
    , IstErkrankungsbeginn INT
    , NeuerFall INT 
    , NeuerTodesfall INT 
    , NeuGenesen INT
    , AnzahlFall INT
    , AnzahlTodesfall INT
    , AnzahlGenesen INT 
    , PRIMARY KEY(ObjectId)
    , INDEX(IdLandkreis)
    , INDEX(Meldedatum)
    , INDEX(RefDatum)
    , INDEX(Geschlecht)
    , INDEX(Altersgruppe));

LOAD DATA LOCAL INFILE '${TEMP}/Aktuell.csv' 
    INTO TABLE Faelle 
    FIELDS TERMINATED BY ',' 
    IGNORE 0 ROWS;

SELECT max(Meldedatum) FROM Faelle;  

DROP TABLE IF EXISTS Impfungen;

CREATE TABLE IF NOT EXISTS Impfungen (
      ObjectId INT
    , Impfdatum DATE
    , IdLandkreis INT
    , AlterVon INT
    , AlterBis INT
    , Impfschutz INT
    , Anzahl INT 
    , PRIMARY KEY(ObjectId)
    , INDEX(IdLandkreis)
    , INDEX(Impfdatum)
    , INDEX(AlterVon)
    , INDEX(AlterBis)
    , INDEX(Impfschutz)
);

LOAD DATA LOCAL INFILE '${TEMP}/Impfungen.csv' 
    INTO TABLE Impfungen 
    FIELDS TERMINATED BY ',' 
    IGNORE 0 ROWS;


EOF


) >> "$SQL"

}


function run_r {

  pushd R
  for r in *.r
    do
        echo -e "\n\n${blue}+---------"
        echo -e "| ${red}${r}"
        echo -e "${blue}+---------${reset}\n\n"
        Rscript $r 2>/dev/null
    done
  popd

}

rm "$SQL"
touch "$SQL"

pushd $GIT

    [ "$PULL" -eq 1 ] && git_pull
    [ "$UPDATE" -eq 1 ] && ( update_db ; mysql --user=rscript --password=rscript < "$SQL" )
    [ "$RUN"  -eq 1 ] && run_r

popd

echo -e "$reset"
